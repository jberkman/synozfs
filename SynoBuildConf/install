#!/bin/bash
# Copyright (C) 2000-2020 Synology Inc. All rights reserved.

### Use PKG_DIR as working directory.
PKG_DIR=/tmp/_test_spk
rm -rf $PKG_DIR
mkdir -p $PKG_DIR

### get spk packing functions
source /pkgscripts/include/pkg_util.sh

create_package_tgz() {
	local firewere_version=
	local package_tgz_dir=/tmp/_package_tgz
	local package_modules_dir=$package_tgz_dir/lib/modules/

	### clear destination directory
	rm -rf $package_tgz_dir && mkdir -p $package_tgz_dir

	### files needed by depmod
	mkdir -p $package_modules_dir
	for f in modules.order modules.builtin ; do
		cp /usr/local/sysroot/usr/lib/modules/*/$f $package_modules_dir/*/
	done

	### install needed file into PKG_DIR
	make install DESTDIR="$package_tgz_dir" INSTALLDIR="$package_tgz_dir"
	make packageinstall DESTDIR="$package_tgz_dir" PKG_DIR="$PKG_DIR"

	### are no longer needed
	for f in modules.order modules.builtin ; do
		rm -f $package_modules_dir/*/$f
	done

	### create package.tgz $1: source_dir $2: dest_dir
	pkg_make_package $package_tgz_dir "${PKG_DIR}"
}

create_spk(){
	cp -av scripts $PKG_DIR/scripts
	cp -av PACKAGE_ICON*.PNG $PKG_DIR
	cp -av conf $PKG_DIR
	cp -av LICENSE $PKG_DIR

	./INFO.sh > INFO
	cp INFO $PKG_DIR/INFO

	### Create the final spk.
	# pkg_make_spk <source path> <dest path> <spk file name>
	# Please put the result spk into /image/packages
	# spk name functions: pkg_get_spk_name pkg_get_spk_unified_name pkg_get_spk_family_name
	mkdir -p /image/packages
	pkg_make_spk ${PKG_DIR} "/image/packages" $(pkg_get_spk_family_name)
}

main() {
	create_package_tgz
	create_spk
}

main "$@"
